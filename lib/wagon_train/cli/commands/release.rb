require 'fileutils'

module WagonTrain
  module CLI
    module Commands
      class Release
        attr_reader :project, :git

        def initialize(project, git)
          @project = project
          @git = git
        end

        def guard!
          unless git.status.changed.empty?
            raise WorkingDirectoryNotClean, "Commit or stash any changes"
          end

          if schema_diff.nil?
            raise NoSchemaChanges, "There are no changes to the schema"
          end
        end

        def run!
          git.branch("master").checkout
          git.checkout_file("develop", "schema.rb")

          write_migration!

          git.add("schema.rb")
          git.add("migrate.rb")
          git.commit("[WagonTrain] Release generated by Wagon Train.")
        end

        private

        def write_migration!
          migration = WagonTrain::Migration::Migration.new(project.current_schema - project.release_schema)
          file = WagonTrain::Migration::Generation.generate_file(migration)

          File.write(project.migration_file, file)
        end
      end
    end
  end
end